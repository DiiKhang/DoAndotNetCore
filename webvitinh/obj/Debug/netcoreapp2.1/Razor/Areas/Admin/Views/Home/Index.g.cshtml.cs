#pragma checksum "D:\.NET ILETS HAO\DoAndotNetCore\webvitinh\Areas\Admin\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5ca06b18d49ada7bdaca2c3865b82921e4ba6085"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Home_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/Admin/Views/Home/Index.cshtml", typeof(AspNetCore.Areas_Admin_Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5ca06b18d49ada7bdaca2c3865b82921e4ba6085", @"/Areas/Admin/Views/Home/Index.cshtml")]
    public class Areas_Admin_Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/admin/Admin/Scripts/jqGrid/grid.locale-en.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/admin/Admin/Scripts/jqGrid/jquery.jqGrid.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\.NET ILETS HAO\DoAndotNetCore\webvitinh\Areas\Admin\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(102, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("header", async() => {
                BeginContext(120, 17, true);
                WriteLiteral("\r\n    Trang chá»§\r\n");
                EndContext();
            }
            );
            BeginContext(140, 6737, true);
            WriteLiteral(@"
<Environment include=""Development"">
    <script>
        $(document).ready(function () {
            $(""#jqGrid"").jqGrid({
                url: ""GetOrder"",
                // we set the changes to be made at client side using predefined word clientArray
                datatype: ""json"",
                mtype: ""GET"",
                colModel: [
                    { key: true, label: 'id', name: 'id' },
                    { label: 'CreateDate', name: 'createDate', editable: true},
                    { label: 'ShipEmail', name: 'shipEmail', editable: true },
                    { label: 'ShipName', name: 'shipName', editable: true },
                    { label: 'ShipMobile', name: 'shipMobile', editable: true },
                    { label: 'ShipAddress', name: 'shipAddress', editable: true },
                    {
                        name: ""status"", width: 70, align: ""center"", editable: true,
                        formatter: ""checkbox"", formatoptions: { disabled: true },
          ");
            WriteLiteral(@"              edittype: ""checkbox"", editoptions: { value: ""1:0"", defaultValue: ""1"" },
                        stype: ""select"", searchoptions: {
                            sopt: [""eq"", ""ne""],
                            value: ""1;0""
                        }
                    },
                ],
                loadonce: true,
                sortname: 'status',
                viewrecords: true,
                subGrid: true,
                subGridRowExpanded: function (subgrid_id, row_id) {
                // we pass two parameters
                // subgrid_id is a id of the div tag created within a table
                // the row_id is the id of the row
                // If we want to pass additional parameters to the url we can use
                // the method getRowData(row_id) - which returns associative array in type name-value
                // here we can easy construct the following
                var subgrid_table_id;
                subgrid_table_id = subgrid_id + ""_t");
            WriteLiteral(@""";
                jQuery(""#"" + subgrid_id).html(""<table id='"" + subgrid_table_id + ""' class='scroll'></table>"");
                    jQuery(""#"" + subgrid_table_id).jqGrid({
                    url: ""OrdersDetailsSubgridData?id="" + row_id,
                    datatype: ""json"",
                    colNames: ['productId', 'orderId', 'quantity', 'price'],
                    colModel: [
                        { name: ""productId"", index: ""productId"", width: 80, key: true },
                        { name: ""orderId"", index: ""orderId"", width: 130 },
                        { name: ""quantity"", index: ""quantity"", width: 80, align: ""right""},
                        { name: ""price"", index: ""price"", width: 80, align: ""right""},                        
                    ],
                    height: '100%',
                    rowNum: 20,
                    footerrow: true,
                    gridComplete: function () {
                        var $grid = $(""#"" + subgrid_table_id);
                 ");
            WriteLiteral(@"       var colSum = $grid.jqGrid('getCol', 'price', false, 'sum');
                        var colSum_2 = $grid.jqGrid('getCol', 'quantity', false, 'sum');
                        var colSum_3 = $grid.jqGrid('getCol', 'productId', false, 'count');
                        $grid.jqGrid('footerData', 'set', { 'price': colSum });
                        $grid.jqGrid('footerData', 'set', { 'quantity': colSum_2 });
                        $grid.jqGrid('footerData', 'set', { 'productId': colSum_3 });
                     },   
                    //grouping: false,
                    //groupingView: {
                    //    groupSummary: [true],
                    //    groupColumnShow: [true],
                    //    groupText: ['<b>{0}</b>'],
                    //    groupCollapse: false,
                    //    groupOrder: ['asc']
                    //    },
                    sortorder: ""asc""
                    });
            },           
                width: 1000,
           ");
            WriteLiteral(@"     height: 600,
                rowNum: 30,
                rowList: [10, 15, 20, 30, 50],
                pager: ""#jqGridPager""
            });
            $('#jqGrid').navGrid('#jqGridPager',
                // the buttons to appear on the toolbar of the grid
                { edit: true, add: false, del: true, search: true, refresh: false, view: false, position: ""left"", cloneToTop: false },
                // options for the Edit Dialog
                {
                    editCaption: ""The Edit Dialog"",
                    url: 'EditOrderJson',
                    afterSubmit: function () {
                        $(this).jqGrid(""setGridParam"", { datatype: 'json' });
                        return [true];
                    },
                    beforeSubmit: function (postdata, form, oper) {
                        if (confirm('Are you sure you want to update this row?')) {
                            return [true, ''];
                        } else {
                           ");
            WriteLiteral(@" return [false, 'You can not submit!'];
                        }
                    },
                    closeAfterEdit: true,
                    errorTextFormat: function (data) {
                        return 'Error: ' + data.responseText
                    }
                },
                // options for the Add Dialog
                {
                    url: ""AddOrderJson"",
                    afterSubmit: function () {
                        $(this).jqGrid(""setGridParam"", {
                            datatype: 'json'
                        });
                        return [true];
                    },
                    closeAfterAdd: true,
                },
                // options for the Delete Dailog
                {
                    url: ""DeleteOrderJson"",
                    beforeSubmit: function (postdata, form, oper) {
                        if (confirm('Are you wanna delete?')) {

                            return [true, ''];
               ");
            WriteLiteral(@"         } else {
                            return [false, 'You can not delete!'];
                        }
                    },
                    afterSubmit: function () {
                        $(this).jqGrid(""setGridParam"", {
                            datatype: 'json'
                        });
                        return [true];
                    },
                    errorTextFormat: function (data) {
                        return 'Error: ' + data.responseText
                    }
                });
        });
    </script>
</Environment>


");
            EndContext();
            DefineSection("jsFooter", async() => {
                BeginContext(6895, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(6901, 70, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b7ae3189c1ef42aeb53d1f2c2d0f9d58", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6971, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(6977, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c9a9ab04d4424eecab0ecf8ce36a8750", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7046, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            BeginContext(7051, 151, true);
            WriteLiteral("\r\n<table id=\"jqGrid\" align=\"center\"></table>\r\n<div id=\"jqGridPager\"></div>\r\n<!--<input id=\"btn\" type=\"button\" value=\"Load data\" />-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
